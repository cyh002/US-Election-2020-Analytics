# https://devcenter.heroku.com/articles/container-registry-and-runtime
# docker build : docker build -f docker/DockerFile . -t streamlit-app:latest
# docker ps to get the container id
# docker tag <image> registry.heroku.com/<app>/<process-type>

# <app> : us-election-analytics-2020
# <process-type> : web
# <image> : streamlit-app:latest

# to run : sudo docker run -d -p 8501:8501 streamlit-app:latest

# to push : sudo docker push registry.heroku.com/us-election-analytics-2020/web
# to release : heroku container:release web -a us-election-analytics-2020
FROM python:3.12.7-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for caching
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir gdown

# Create data/results directory
RUN mkdir -p data/results

# Make directory
RUN mkdir -p conf src app

# 2. Verify directory structure
RUN ls -la

# Download results data
RUN gdown https://drive.google.com/uc?id=1x7UrY60whtL45mvTl-Z80qxWf84D9T6l -O data/results/results_xlm.csv

# Copy application code
COPY conf/ ./conf/
COPY src/ ./src/
COPY app/ ./app/

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1

ARG openai_api_key
ENV openai_api_key=$openai_api_key

# set home directory
WORKDIR /app

RUN useradd -m streamlit
USER streamlit

# # Command to run the application
# ENTRYPOINT ["streamlit", "run", "app/streamlit_app.py", "--server.port=$PORT", "--server.address=0.0.0.0"]

CMD ["streamlit", "run", "app/streamlit_app.py", "--server.port=$PORT"]